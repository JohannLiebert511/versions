@@ -, +, @@ 
            Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
        PR target/63354
        * config/rs6000/linux64.h (TARGET_KEEP_LEAF_WHEN_PROFILED): New
        #define.
        * config/rs6000/rs6000.c (rs6000_keep_leaf_when_profiled): New
        function.
            Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
        PR target/63354
        * gcc.target/powerpc/pr63354.c:  New test.
---
 gcc/config/rs6000/linux64.h                |  3 +++
 gcc/config/rs6000/rs6000.c                 |  8 ++++++++
 gcc/testsuite/gcc.target/powerpc/pr63354.c | 11 +++++++++++
 3 files changed, 22 insertions(+)
 create mode 100644 gcc/testsuite/gcc.target/powerpc/pr63354.c
--- gcc/config/rs6000/linux64.h
+++ gcc/config/rs6000/linux64.h
@@ -59,6 +59,9 @@ extern int dot_symbols;
 
 #define TARGET_PROFILE_KERNEL profile_kernel
 
+#undef TARGET_KEEP_LEAF_WHEN_PROFILED
+#define TARGET_KEEP_LEAF_WHEN_PROFILED rs6000_keep_leaf_when_profiled
+
 #define TARGET_USES_LINUX64_OPT 1
 #ifdef HAVE_LD_LARGE_TOC
 #undef TARGET_CMODEL
--- gcc/config/rs6000/rs6000.c
+++ gcc/config/rs6000/rs6000.c
@@ -24140,6 +24140,14 @@ rs6000_output_function_prologue (FILE *file,
   rs6000_pic_labelno++;
 }
 
+/* -mprofile-kernel code calls mcount before the function prolog,
+   so a profiled leaf function should stay a leaf function.  */
+static bool
+rs6000_keep_leaf_when_profiled ()
+{
+  return TARGET_PROFILE_KERNEL;
+}
+
 /* Non-zero if vmx regs are restored before the frame pop, zero if
    we restore after the pop when possible.  */
 #define ALWAYS_RESTORE_ALTIVEC_BEFORE_POP 0
--- gcc/testsuite/gcc.target/powerpc/pr63354.c
+++ gcc/testsuite/gcc.target/powerpc/pr63354.c
@@ -0,0 +1,11 @@ 
+/* Verify that we don't stack a frame for leaf functions when using
+   -pg -mprofile-kernel.  */
+
+/* { dg-do compile { target { powerpc64*-*-* } } } */
+/* { dg-options "-O2 -pg -mprofile-kernel" } */
+/* { dg-final { scan-assembler-not "mtlr" } } */
+
+int foo(void)
+{
+  return 1;
+}
-- 

